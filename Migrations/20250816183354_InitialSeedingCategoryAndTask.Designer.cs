// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using apiEF;

#nullable disable

namespace apiEF.Migrations
{
    [DbContext(typeof(TasksContext))]
    [Migration("20250816183354_InitialSeedingCategoryAndTask")]
    partial class InitialSeedingCategoryAndTask
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("apiEF.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(170)
                        .HasColumnType("character varying(170)");

                    b.Property<int>("Relevance")
                        .HasColumnType("integer");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("00f9d419-1430-4312-bfe3-834e5f8727ca"),
                            Name = "Outdoor activities",
                            Relevance = 40
                        },
                        new
                        {
                            CategoryId = new Guid("00f9d419-1430-4312-bfe3-834e5f8727cb"),
                            Name = "Indoor activities",
                            Relevance = 15
                        });
                });

            modelBuilder.Entity("apiEF.Models.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("PriorityTask")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(210)
                        .HasColumnType("character varying(210)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("00f9d419-1430-4312-bfe3-834e5f872710"),
                            CategoryId = new Guid("00f9d419-1430-4312-bfe3-834e5f8727ca"),
                            DateCreation = new DateTime(2025, 8, 16, 18, 0, 0, 0, DateTimeKind.Utc),
                            PriorityTask = 2,
                            Title = "Run 20 min"
                        },
                        new
                        {
                            TaskId = new Guid("00f9d419-1430-4312-bfe3-834e5f872712"),
                            CategoryId = new Guid("00f9d419-1430-4312-bfe3-834e5f8727ca"),
                            DateCreation = new DateTime(2025, 8, 16, 18, 0, 0, 0, DateTimeKind.Utc),
                            PriorityTask = 0,
                            Title = "Climb Everest"
                        },
                        new
                        {
                            TaskId = new Guid("00f9d419-1430-4312-bfe3-834e5f872714"),
                            CategoryId = new Guid("00f9d419-1430-4312-bfe3-834e5f8727cb"),
                            DateCreation = new DateTime(2025, 8, 16, 18, 0, 0, 0, DateTimeKind.Utc),
                            PriorityTask = 1,
                            Title = "Play Chess"
                        },
                        new
                        {
                            TaskId = new Guid("00f9d419-1430-4312-bfe3-834e5f872716"),
                            CategoryId = new Guid("00f9d419-1430-4312-bfe3-834e5f8727cb"),
                            DateCreation = new DateTime(2025, 8, 16, 18, 0, 0, 0, DateTimeKind.Utc),
                            PriorityTask = 0,
                            Title = "Clean under the bed"
                        });
                });

            modelBuilder.Entity("apiEF.Models.Task", b =>
                {
                    b.HasOne("apiEF.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("apiEF.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
